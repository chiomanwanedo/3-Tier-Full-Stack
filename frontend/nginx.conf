# frontend/nginx.conf  (for Render single-domain setup)

map $http_upgrade $connection_upgrade { default upgrade; '' close; }

server {
  listen 80;
  server_name _;

  # Serve your built React/Vite app
  root /usr/share/nginx/html;
  index index.html;

  # Allow larger payloads (e.g., image uploads)
  client_max_body_size 20m;

  # -------- Optional security headers --------
  add_header X-Frame-Options SAMEORIGIN always;
  add_header X-Content-Type-Options nosniff always;
  add_header Referrer-Policy same-origin always;

  # -------- Optional CSP (tight; relax if something is blocked) --------
  add_header Content-Security-Policy "default-src 'self'; \
    connect-src 'self' https://api.mapbox.com https://events.mapbox.com https://a.tiles.mapbox.com https://b.tiles.mapbox.com https://api.tiles.mapbox.com; \
    script-src 'self' 'unsafe-inline' https://api.mapbox.com https://api.tiles.mapbox.com; \
    style-src  'self' 'unsafe-inline' https://api.mapbox.com https://api.tiles.mapbox.com; \
    img-src    'self' data: blob: https://api.mapbox.com https://a.tiles.mapbox.com https://b.tiles.mapbox.com https://res.cloudinary.com https://images.unsplash.com; \
    font-src   'self';" always;

  # -------- API proxy to Render backend (public HTTPS URL) --------
  # IMPORTANT: no trailing slash on proxy_pass; preserves /api/... path
  location /api/ {
    proxy_pass https://three-tier-full-stack.onrender.com;
    proxy_http_version 1.1;

    # âœ… Force routing to the BACKEND service (avoid loop)
    proxy_set_header Host three-tier-full-stack.onrender.com;
    proxy_ssl_name three-tier-full-stack.onrender.com;
    proxy_ssl_server_name on;

    # Forward client info (optional)
    proxy_set_header X-Real-IP         $remote_addr;
    proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    # WebSockets / SSE
    proxy_set_header Upgrade           $http_upgrade;
    proxy_set_header Connection        $connection_upgrade;

    proxy_read_timeout 60s;
    proxy_send_timeout 60s;
    proxy_buffering off;
    proxy_redirect off;
  }

  # -------- Cache static assets (optional) --------
  location ~* \.(?:js|mjs|css|woff2?|ttf|eot|png|jpe?g|gif|svg|ico)$ {
    expires 7d;
    access_log off;
    add_header Cache-Control "public, max-age=604800, immutable";
    try_files $uri =404;
  }

  # -------- SPA routing --------
  location / {
    try_files $uri /index.html;
  }
}
